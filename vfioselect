#!/bin/bash
# Script to bind the VFIO stub driver to PCI devices
# By Trent Arcuri, 2017
#

tmpfile=$(mktemp)
genfile='/etc/modprobe.d/vfioselect.conf' 	# modify this to use a different config location
online=false

usage()
{
  echo """Usage: $(basename $0) [<arguments>]
  -t,--tmpfile  <path>   Specify path to temporary file
  -g,--genfile  <path>   Specify path to modprobe rule
  -o,--online            Attempt to bind/unbind without the need to reboot
  -h,--help              Display this help dialogue"""
}

cleanup()
{
  rm $tmpfile $genfile.old
}

makelist()
{
  if [ -e $genfile ]; then
    cp $genfile $genfile.old
  else
    touch $genfile
  fi

  IFS=$'\n' 	# make newlines the only separator
  for pci in $(lspci -n | awk '{print $3}')
  do
    if grep -qi $pci "$genfile"; then
      menuitems+=("$pci" "$(lspci -d $pci)" "on")
    else
      menuitems+=("$pci" "$(lspci -d $pci)" "off")
    fi
  done

  dialog --keep-tite --checklist "Choose which devices to bind:" 30 180 30 "${menuitems[@]}" 2>$tmpfile
}


makefile()
{
  if which dialog > /dev/null ; then
    echo "options vfio-pci ids=$(cat $tmpfile | sed 's/\ /,/g')" > $genfile
  else
    dialog
    exit 1
  fi
}

online()
{
  echo "Functionality not yet implemented."

}

unbind()
{
  echo "Unbind functionality not yet implemented."
}

bind()
{
  echo "Bind functionality not yet implemented."
}

#Check arguments
while [ "$1" != "" ]; do
  case $1 in
    -t | --tmpfile )  shift
                      cleanup
                      tmpfile=$1
                      ;;
    -g | --genfile )  shift
                      genfile=$1
                      ;;
    -o | --online )   online=true
                      ;;
    -h | --help )     usage
                      exit
  esac
  shift
done

#Check for root access
if [[ "$(whoami)" != "root" ]]; then
  echo "This program requires root access."
  exit 1
else
  makelist
  makefile
  if $online; then
    online
  fi
  cleanup
fi
